@import url('./variables.css');

.skillsContainer {
  margin: var(--space-xl) 0;
  color: var(--color-starlight);
}

.title {
  font-size: var(--font-size-title);
  margin-bottom: var(--space-md);
  color: var(--color-starlight);
  position: relative;
  display: inline-block;
}

.title::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 0;
  width: 60px;
  height: 1px;
  background-color: var(--color-nebula-accent);
}

.skillsGrid {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-md);
  justify-content: flex-start;
}

.skillItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 80px;
  margin-bottom: var(--space-sm);
  position: relative;
  transition: transform 0.3s ease;
  /* Make items tappable */
  cursor: pointer;
  user-select: none;
  touch-action: manipulation;
}

.skillItem:hover {
  transform: translateY(-5px);
}

.iconContainer {
  position: relative;
  margin-bottom: var(--space-xs);
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.skillIcon {
  width: 40px;
  height: 40px;
  filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.7));
  z-index: 2;
  position: relative;
}

.orbitRing {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 1px solid rgba(0, 255, 255, 0.3);
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.2);
  animation: rotate 8s linear infinite;
}

.skillItem:nth-child(odd) .orbitRing {
  animation-direction: reverse;
}

.skillItem:hover .orbitRing {
  border-color: rgba(0, 255, 255, 0.8);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
}

.skillName {
  font-size: var(--font-size-small);
  color: var(--color-stardust);
  text-align: center;
  opacity: 0.8;
  transition: opacity 0.3s ease;
}

.skillItem:hover .skillName {
  opacity: 1;
  color: var(--color-starlight);
}

/* Tooltip styling */
.skillTooltip {
  position: absolute;
  background: rgba(10, 15, 25, 0.9);
  color: var(--color-starlight);
  padding: 6px 10px;
  border-radius: 4px;
  font-size: 12px;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s ease;
  transform: translateY(10px);
  z-index: 10;
  bottom: -40px;
  width: 100px;
  text-align: center;
  left: 50%;
  margin-left: -50px;
  box-shadow: 0 0 8px rgba(0, 255, 255, 0.3), inset 0 0 20px rgba(0, 255, 255, 0.05);
  border: 1px solid rgba(0, 255, 255, 0.2);
  backdrop-filter: blur(4px);
  pointer-events: none;
  /* Fix any z-index or position issues that might cause flickering */
  will-change: opacity, transform, visibility;
}

.skillTooltip::after {
  content: '';
  position: absolute;
  top: -4px;
  left: 50%;
  margin-left: -4px;
  width: 8px;
  height: 8px;
  background: rgba(10, 15, 25, 0.9);
  transform: rotate(45deg);
  border-top: 1px solid rgba(0, 255, 255, 0.2);
  border-left: 1px solid rgba(0, 255, 255, 0.2);
}

.skillItem:hover .skillTooltip {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.skillItem:focus-within .skillTooltip {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/* Customize icon appearance on hover */
.skillItem:hover .skillIcon {
  filter: drop-shadow(0 0 8px rgba(0, 255, 255, 0.8));
  transform: scale(1.1);
  transition: filter 0.3s, transform 0.3s;
}

/* Active state for mobile/tablet touch with longer transitions */
.skillItem.active .orbitRing {
  border-color: rgba(0, 255, 255, 0.8);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
  animation-play-state: paused;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.skillItem.active .skillIcon {
  filter: drop-shadow(0 0 8px rgba(0, 255, 255, 0.8));
  transform: scale(1.1);
  transition: filter 0.2s ease, transform 0.2s ease;
}

.skillItem.active .skillName {
  opacity: 1;
  color: var(--color-nebula-accent);
  transition: color 0.2s ease, opacity 0.2s ease;
}

/* Show tooltip on active state for mobile with longer, more stable transition */
.skillItem.active .skillTooltip {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
  /* Add longer delays for mobile to ensure stability */
  transition: opacity 0.3s ease, transform 0.3s ease, visibility 0s;
  transition-delay: 0.1s;
}

/* Remove the category legend styles */
.categoryLegend,
.legendItem {
  display: none;
}

/* Animation for orbital rings */
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Different orbit speeds */
.skillItem:nth-child(3n) .orbitRing {
  animation-duration: 10s;
}

.skillItem:nth-child(3n+1) .orbitRing {
  animation-duration: 12s;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .skillsGrid {
    justify-content: center;
    gap: var(--space-sm);
  }
  
  .skillItem {
    width: 70px;
    margin-bottom: var(--space-xs);
    /* Add larger touch target for mobile */
    padding: 5px;
  }
  
  /* Optimize tooltips for mobile */
  .skillTooltip {
    display: block;
    width: 80px;
    margin-left: -40px;
    font-size: 10px;
    padding: 4px 8px;
    bottom: -35px;
    /* Use more opaque background for better readability on mobile */
    background: rgba(10, 15, 25, 0.95);
  }
  
  /* Completely disable hover effects on touch devices */
  @media (hover: none) {
    .skillItem:hover .orbitRing,
    .skillItem:hover .skillIcon,
    .skillItem:hover .skillName,
    .skillItem:hover .skillTooltip {
      /* Cancel hover styles */
      transition: none;
      transform: none;
      opacity: inherit;
      visibility: inherit;
      filter: inherit;
      border-color: inherit;
      box-shadow: inherit;
      color: inherit;
    }
  }
}
